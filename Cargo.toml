[package]
name = "zero2Prod"
version = "0.1.0"
edition = "2021"

[lib]
# We could use any path here, but we are following the community convention
# We could specify a library name using the `name` field. If unspecified,
# cargo will default to `package.name`, which is what we want.
path = "src/lib.rs"

[[bin]]
# Notice the double square brackets: it's an array in TOML's syntax.
# We can only have one library in a project, but we can have multiple binaries!
# If you want to manage multiple libraries in the same repository
# have a look at the workspace feature - we'll cover it later on.
path = "src/main.rs"
name = "zero2prod"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

[dependencies]
config = "0.13"
actix-web = "4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
chrono = { version = "0.4.22", default-features=false, features= ["clock"]}
tracing = {version = "0.1", features = ["log"]}
tracing-subscriber = {version = "0.3", features = ["registry","env-filter"]}
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
secrecy = { version = "0.8", features = ["serde"]}
tracing-actix-web = "0.6"
serde-aux = "3"
serde_json = "1"
unicode-segmentation = "1"
validator = "0.14"
rand = {version = "0.8.0", features=["std_rng"]}
thiserror = "1"
anyhow = "1"
base64 = "0.21"
argon2 = {version ="0.4", features = ["std"]}
urlencoding = "2"
htmlescape = "0.3"
hmac = {version = "0.12", features = ["std"] }
sha2 = "0.10"
# tag was a byte slice encoded as a hex string, use this to decode it
hex = "0.4"
actix-web-flash-messages = {version = "0.4", features = ["cookies"]}
actix-session = {version = "0.7", features = ["redis-rs-tls-session"]}
uuid = { version = "1", features = ["v4", "serde"]}

# We need the optional `derive` feature to use `serde`'s procedural macros:
# `#[derive(Serialize)]` and `#[derive(Deserialize)]`.
# The feature is not enabled by default to avoid pulling in
serde = { version = "1", features = ["derive"]}

[dependencies.sqlx]
version = "0.6.2"
default-features = false
features = [
    "runtime-tokio-rustls",
    "macros",
    "postgres",
    "uuid",
    "chrono",
    "migrate",
    "offline"
]

[dependencies.reqwest]
reqwest = "0.11"
default-features = false
# We need the 'json' feature flag to serialize/deserialize json payloads
features = ["json", "rustls-tls", "cookies"]

# Dev dependencies are used exclusively when running tests or examples
## They do not get included in the final application binary!
[dev-dependencies]
once_cell = "1"
claim = "0.5"
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
tokio = {version ="1", features = ["rt","macros"]}
wiremock ="0.5"
serde_json = "1"
linkify = "0.9"